# Default values for metacat.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: metacat
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  #tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

global:
    #TODO storageClass: csi-rbd-sc
    #solrPort: &global-solr-port 8983

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: LoadBalancer
  ports:
  - port: 8080
    name: metacat-web
  - port: 8009
    name: apache-connect
  - port: 5701
    name: hazelcast
  # - port: 5005
  #   name: metacat-debug

ingress:
  enabled: false
  className: ""
  annotations: {}
  tls: []
 
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube.

autoscaling:
  enabled: false

nodeSelector: {}

tolerations: []

affinity: {}

# persistence:
#   claimName: metacat-pvc
#   volumeName: metacat-pv
#   mountPath: /var/metacat

  #readinessProbe:
  #    enabled: false
  #customReadinessProbe:
  #    failureThreshold: 6
  #    initialDelaySeconds: 60
  #    periodSeconds: 10
  #    successThreshold: 1
  #    timeoutSeconds: 15
  #    initialDelaySeconds: 60
  #    failureThreshold: 6
  #    exec:
  #      command:
  #        - /bin/bash
  #        - -ec
  #        - |
  #          curl --silent --connect-timeout 15000 --user ${SOLR_ADMIN_USERNAME}:${SOLR_ADMIN_PASSWORD} http://localhost:${SOLR_PORT_NUMBER}/api/node/health | grep --quiet  '\"status\":\"OK\"'
  # lifecycleHooks:
  #     postStart:
  #       exec:
          # #command: ["/bin/bash", "-c", "env > /tmp/lifecycle-env"]
          # command: ["/bin/bash", "-c", "/solrconfig/config-solr.sh"]

