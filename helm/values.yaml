# Default values for metacat.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
metacat:
  # TODO - MB -- MOVE TO SECRETS!!
  administratorUsername: admin@localhost
  applicationContext: metacat
  databaseHostname: host.docker.internal
  databaseName: metacat
  # TODO - MB -- MOVE TO SECRETS!!
  databasePassword: metacat
  databaseUsername: metacat
  guidDoiEnabled: true
  # TODO - MB -- MOVE TO SECRETS!!
  guidDoiUsername: apitest
  guidDoiPassword: apitest
  serverHostName: metacat.example.com
  serverHttpPort: "8080"
  serverHttpSslPort: "8443"
  solrHostname: host.docker.internal

image:
  #TODO pull from github container repo, e.g. see indexer: ghcr.io/dataoneorg/dataone-index-worker
  repository: metacat
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
  
global:
  #TODO
  #storageClass: csi-rbd-sc
  #solrPort: &global-solr-port 8983

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
#  fsGroup: metacat
#  runAsUser: metacat
#  capabilities:
#    readOnlyRootFilesystem: true
#    runAsNonRoot: true
  #   drop:
  #   - ALL

service:
  type: ClusterIP
  ports:
  - port: 8080
    name: metacat-web
  - port: 8009
    name: apache-connect
  - port: 5701
    name: hazelcast

#  type: LoadBalancer
#  # TODO: rethink this when dev finished
# - port: 5005
#   name: metacat-debug

ingress:
  enabled: false
  className: ""
  annotations: {}
  tls: []
 
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with limited
  # resources, such as Minikube.

autoscaling:
  enabled: false

nodeSelector: {}

tolerations: []

affinity: {}

persistence:
  ## @param persistence.enabled Enable persistence using Persistent Volume Claims
  ## Persistence should be set to 'enabled: true' for production deployments.
  ## For development/testing ONLY: Setting this to false will result in the use of a temporary
  ## 'emptyDir' for saving metacat's data. This means the data saved by metacat WILL BE LOST when
  ## the pod is deleted!
  enabled: true
  ## @param persistence.existingClaim
  ## Set a value for 'existingClaim' only if you want to re-use a Persistent Volume Claim that has
  ## already been set up by a k8s admin ahead of time. Leaving it blank will cause a pvc to be
  ## created dynamically using volumeClaimTemplates.
  existingClaim: ""
  ## @param persistence.storageClassName Storage class of backing PVC
  ## If defined, storageClassName: <storageClassName>
  ## If set to "", storageClassName: "", meaning can only be bound to PVs with no class (no
  ## annotation or one set equal to "")
  ## If undefined (the default) or set to null, no storageClassName spec is set, choosing the
  ## default provisioner.
  ## storageClassName:
