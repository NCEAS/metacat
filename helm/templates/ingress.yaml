{{- if .Values.ingress.enabled -}}
{{- $fullName := include "metacat.fullname" . -}}
{{ $serverName := index .Values.metacat "server.name" }}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- $apiVer := "v1" }}
apiVersion: networking.k8s.io/{{ $apiVer }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "metacat.labels" . | nindent 4 }}
  {{- $mutualAuth := index .Values.metacat "dataone.certificate.fromHttpHeader.enabled" -}}
  {{- $siteMapEnabled := index .Values.metacat "sitemap.enabled" }}
  annotations:
    {{- with .Values.ingress.annotations }}
      {{- toYaml . | nindent 4 }}
    {{- end -}}
    {{- if $mutualAuth -}}
      {{- include "dataone.mutual.auth.annotations" . | nindent 4 }}
    {{- end }}
    nginx.ingress.kubernetes.io/configuration-snippet: |
    {{- if $mutualAuth -}}
      {{- $xProxyKeyKey := "METACAT_DATAONE_CERT_FROM_HTTP_HEADER_PROXY_KEY" -}}
      {{- $secrets := (printf "%s-metacat-secrets" .Release.Name) -}}
      {{- $secretData := (lookup $apiVer "Secret" .Release.Namespace $secrets).data
          | default dict -}}
      {{- $xProxyKeyVal := ((get $secretData $xProxyKeyKey) | b64dec)
          | default (printf "\"SECRETS: '%s'; KEY NOT FOUND: '%s'\"" $secrets $xProxyKeyKey)}}
      more_set_input_headers "X-Proxy-Key: {{ $xProxyKeyVal }}";
    {{- end }}
    {{- if $siteMapEnabled }}
      rewrite ^/(sitemap.+) /{{- index .Values.metacat "application.context" -}}
      /sitemaps/$1 redirect;
    {{- end }}
      rewrite ^/robots.txt /{{- index .Values.metacat "application.context" -}}
      /robots.txt redirect;
    {{- range .Values.ingress.rewriteRules -}}
      {{ . | nindent 6 }}
    {{- end }}
spec:
  ingressClassName: {{ .Values.ingress.className }}
  {{- if .Values.ingress.tls }}
  tls:
  {{- range .Values.ingress.tls }}
  - hosts:
    {{- if eq (len .hosts) 0 }}
      - {{ $serverName }}
    {{- else }}
      {{- range .hosts }}
      - {{ . | quote }}
      {{- end }}
    {{- end }}
    secretName: {{ required ".Values.ingress.tls.secretName REQUIRED" .secretName }}
  {{- end }}
  {{- end }}
  rules:
    {{- if .Values.ingress.hosts }}
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            pathType: {{ .pathType }}
            backend:
              service:
                name: {{ $fullName }}-hl
                port:
                  number: 8080
          {{- end }}
    {{- end }}
    {{- else }}
    - host: {{ $serverName }}
      http:
        paths:
          - path: /{{ index .Values.metacat "application.context" }}
            pathType: Prefix
            backend:
              service:
                name: {{ $fullName }}-hl
                port:
                  number: 8080
          {{- if .Values.global.includeMetacatUi }}
          {{- $webroot := regexReplaceAll "/$" .Values.global.metacatUiWebRoot "" }}
          - path: {{ $webroot }}/
            pathType: Prefix
            backend:
              service:
                name: {{ .Release.Name }}-metacatui
                port:
                  number: 80
          {{- end }}
    {{- end }}
{{- end }}
